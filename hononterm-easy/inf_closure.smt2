(set-logic HORN)
(declare-fun X1 (Int Int Int) Bool)
(declare-fun X2 (Int Int) Bool)
(declare-fun X3 (Int) Bool)
(declare-fun X4 (Int Int Int) Bool)
(declare-fun X5 (Int Int) Bool)
(declare-fun X12 (Int Int Int Int) Bool)
(declare-fun X25 () Bool)
(declare-fun X35 (Int Int) Bool)
(declare-fun X51 (Int Int) Bool)
(declare-fun X67 (Int Int) Bool)
(declare-fun X83 (Int Int) Bool)
(declare-fun X99 (Int Int) Bool)
(declare-fun X114 () Bool)
(declare-fun X115 () Bool)
(declare-fun X116 () Bool)
(declare-fun X117 () Bool)
(declare-fun X118 () Bool)
(declare-fun X119 (Int Int Int) Bool)
(declare-fun X120 (Int Int) Bool)
(declare-fun X121 (Int) Bool)
(assert (forall ((x94 Int)) (=> (X121  x94) (X3  x94))))
(assert (forall ((x94 Int)(x95 Int)) (=> (X2  x95 x94) (or (X5  x95 x94) (X3  x94)))))
(assert (forall ((x94 Int)(x95 Int)(x96 Int)) (=> (X4  x96 x95 x94) (or (or (X1  x96 x95 x94) (X5  x95 x94)) (X3  x94)))))
(assert (forall ((n12 Int)) (=> (X5  n12 n12) (X121  n12))))
(assert (forall ((n12 Int)(tmp119 Int)(x93 Int)) (=> (and (=  tmp119 n12) (not (=  x93 0))) (or (X4  x93 n12 tmp119) (X121  n12)))))
(assert (forall ((n12 Int)(tmp120 Int)(x93 Int)) (=> (and (=  tmp120 n12) (and (=  x93 0) (X120  x93 n12))) (or (X4  x93 n12 tmp120) (X121  n12)))))
(assert (forall ((n12 Int)(res14 Int)) (=> (X3  n12) (X120  res14 n12))))
(assert (forall ((n12 Int)(res14 Int)(x91 Int)) (=> (X119  x91 res14 n12) (or (X2  x91 n12) (X120  res14 n12)))))
(assert (forall ((n12 Int)(res14 Int)(x91 Int)(x92 Int)) (=> (X1  x92 x91 n12) (or (or (X12  x92 x91 res14 n12) (X2  x91 n12)) (X120  res14 n12)))))
(assert (forall ((n10 Int)(n12 Int)(res14 Int)) (=> (X5  (+  n10 1) n12) (X119  n10 res14 n12))))
(assert (forall ((n10 Int)(n12 Int)(res14 Int)(tmp121 Int)(x90 Int)) (=> (and (=  tmp121 (+  n10 1)) (X12  x90 n10 res14 n12)) (or (X4  x90 tmp121 n12) (X119  n10 res14 n12)))))
(assert (=> (and X114 (and X115 (and X116 (and X117 X118)))) X25))
(assert (=> (X3  10) X118))
(assert (forall ((tmp122 Int)(x88 Int)) (=> (and (=  tmp122 10) (and (=  x88 0) (X35  1 x88))) (or (X2  x88 tmp122) X118))))
(assert (forall ((tmp123 Int)(x88 Int)) (=> (and (=  tmp123 10) (and (not (=  x88 0)) (X35  0 x88))) (or (X2  x88 tmp123) X118))))
(assert (forall ((tmp124 Int)(x88 Int)(x89 Int)) (=> (and (=  tmp124 10) (X1  x89 x88 10)) (or (or (X35  x89 x88) (X2  x88 tmp124)) X118))))
(assert (=> (X3  3) X117))
(assert (forall ((tmp125 Int)(x86 Int)) (=> (and (=  tmp125 3) (and (=  x86 0) (X51  1 x86))) (or (X2  x86 tmp125) X117))))
(assert (forall ((tmp126 Int)(x86 Int)) (=> (and (=  tmp126 3) (and (not (=  x86 0)) (X51  0 x86))) (or (X2  x86 tmp126) X117))))
(assert (forall ((tmp127 Int)(x86 Int)(x87 Int)) (=> (and (=  tmp127 3) (X1  x87 x86 3)) (or (or (X51  x87 x86) (X2  x86 tmp127)) X117))))
(assert (=> (X3  1) X116))
(assert (forall ((tmp128 Int)(x84 Int)) (=> (and (=  tmp128 1) (and (=  x84 0) (X67  1 x84))) (or (X2  x84 tmp128) X116))))
(assert (forall ((tmp129 Int)(x84 Int)) (=> (and (=  tmp129 1) (and (not (=  x84 0)) (X67  0 x84))) (or (X2  x84 tmp129) X116))))
(assert (forall ((tmp130 Int)(x84 Int)(x85 Int)) (=> (and (=  tmp130 1) (X1  x85 x84 1)) (or (or (X67  x85 x84) (X2  x84 tmp130)) X116))))
(assert (=> (X3  0) X115))
(assert (forall ((tmp131 Int)(x82 Int)) (=> (and (=  tmp131 0) (and (=  x82 0) (X83  1 x82))) (or (X2  x82 tmp131) X115))))
(assert (forall ((tmp132 Int)(x82 Int)) (=> (and (=  tmp132 0) (and (not (=  x82 0)) (X83  0 x82))) (or (X2  x82 tmp132) X115))))
(assert (forall ((tmp133 Int)(x82 Int)(x83 Int)) (=> (and (=  tmp133 0) (X1  x83 x82 0)) (or (or (X83  x83 x82) (X2  x82 tmp133)) X115))))
(assert (=> (X3  (-  0 3)) X114))
(assert (forall ((tmp134 Int)(x80 Int)) (=> (and (=  tmp134 (-  0 3)) (and (=  x80 0) (X99  1 x80))) (or (X2  x80 tmp134) X114))))
(assert (forall ((tmp135 Int)(x80 Int)) (=> (and (=  tmp135 (-  0 3)) (and (not (=  x80 0)) (X99  0 x80))) (or (X2  x80 tmp135) X114))))
(assert (forall ((tmp136 Int)(x80 Int)(x81 Int)) (=> (and (=  tmp136 (-  0 3)) (X1  x81 x80 (-  0 3))) (or (or (X99  x81 x80) (X2  x80 tmp136)) X114))))
(assert (=> X25 false))
(check-sat)
    